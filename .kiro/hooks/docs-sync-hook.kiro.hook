{
  "enabled": true,
  "name": "Documentation Sync",
  "description": "Listens to all TypeScript source files, React components, configuration files, and other relevant project files. When changes are detected, triggers documentation updates in README.md or docs folder to keep documentation in sync with code changes.",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "**/*.ts",
      "**/*.tsx",
      "**/*.js",
      "**/*.jsx",
      "package.json",
      "tsconfig.json",
      "next.config.ts",
      "components.json",
      "eslint.config.mjs",
      "ai/**/*",
      "lib/**/*",
      "app/**/*",
      "components/**/*",
      "hooks/**/*"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Source code files have been modified in this TypeScript/React/Next.js project. Please review the changes and update the documentation accordingly. Focus on:\n\n1. Update README.md with any new features, components, or API changes\n2. If there's a /docs folder, update relevant documentation files there\n3. Ensure code examples in documentation reflect current implementation\n4. Update any architectural diagrams or flow descriptions if the structure changed\n5. Add or update installation/setup instructions if dependencies or configuration changed\n6. Document any new environment variables or configuration options\n\nPay special attention to:\n- New React components and their props/usage\n- Changes to AI flows or Genkit configuration\n- Wallet integration updates\n- Database model changes\n- New API endpoints or server actions\n- UI/UX changes that affect user workflows\n\nKeep the documentation clear, concise, and helpful for both developers and end users."
  }
}